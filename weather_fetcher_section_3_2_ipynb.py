# -*- coding: utf-8 -*-
"""Weather Fetcher  Section 3.2 ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KeFR3NP1uHaVjZ3JO1Un9T-Iqk-M51zA
"""

# Section 3.2 - Refined Weather API Function
# Course constraint: Week 8 (Basic try/except API handling) + Week 6 (Simple validation)

def refined_safe_weather_data_fetch(city):
    """
    Fetch weather data with basic error handling - Week 8 style

    >>> refined_safe_weather_data_fetch("")
    Error: City name cannot be empty
    >>> refined_safe_weather_data_fetch("InvalidCity123")  # doctest: +SKIP
    Error: Could not connect to weather service
    """
    # Step 1: Input validation - Week 6 concept
    if not city:
        print("Error: City name cannot be empty")
        return None

    try:
        import requests
        url = f"http://wttr.in/{city}?format=j1"
        response = requests.get(url)
        data = response.json()

        # Step 2: Extract basic fields (Week 8 example logic)
        current = data['current_condition'][0]
        weather_info = {
            'city': city,
            'temperature': current['temp_C'],
            'wind_speed': current['windspeedKmph'],
            'description': current['weatherDesc'][0]['value']
        }

        return weather_info

    except:
        print("Error: Could not connect to weather service")
        return None

# Optional test (interactive, not doctest)
print(refined_safe_weather_data_fetch("London"))  # Expected: Dictionary with temp, wind_speed, etc.